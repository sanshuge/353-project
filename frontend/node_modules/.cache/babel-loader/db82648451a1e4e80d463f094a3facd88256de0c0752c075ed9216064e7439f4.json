{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:3000/getmessages').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setMessages(data.messages);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n\n  // const handleNewmessage = () => {\n  //   fetch('http://localhost:3000/addmessage', {\n  //     method: 'message', \n  //     body: new URLSearchParams ({message:message}),\n  //     headers: {\n  //       'Content-Type': 'application/x-www-form-urlencoded'\n  //     },\n\n  //   })\n  //   .then(response => response.json())\n  //   .then(alert(`new message added`))\n  //   .catch(error => console.error(error))\n\n  //   setmessage(\"\")\n  //   setmessages([...messages,message])  \n  //   // console.log(messages)\n\n  //   }\n  const handleNewMessage = () => {\n    fetch('http://localhost:3000/addmessage', {\n      method: 'POST',\n      body: new URLSearchParams({\n        message: message\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(() => {\n      alert('new message added');\n      const updatedmessage = [...messages, {\n        message: message\n      }]; // Create a new messa object if necessary\n      setMessages(updatedmessage); // Update the messas state\n      setMessage(\"\"); // Clear the new messa input\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" share your thoughts here \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"content\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewMessage,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [message.ID, \"  \", message.message]\n        }, message.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n}\n_s(Messages, \"cirg1XNVuY5I7aqZjd23CdWZMY0=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Messages","_s","messages","setMessages","message","setMessage","fetch","then","response","ok","Error","json","data","catch","error","console","handleNewMessage","method","body","URLSearchParams","headers","text","alert","updatedmessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","ID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Messages.js"],"sourcesContent":["import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\n\r\nfunction Messages(){\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/getmessages')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setMessages(data.messages)\r\n      })\r\n      .catch(error => {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n        \r\n      });\r\n  }, []); \r\n\r\n  // const handleNewmessage = () => {\r\n  //   fetch('http://localhost:3000/addmessage', {\r\n  //     method: 'message', \r\n  //     body: new URLSearchParams ({message:message}),\r\n  //     headers: {\r\n  //       'Content-Type': 'application/x-www-form-urlencoded'\r\n  //     },\r\n      \r\n  //   })\r\n  //   .then(response => response.json())\r\n  //   .then(alert(`new message added`))\r\n  //   .catch(error => console.error(error))\r\n   \r\n  //   setmessage(\"\")\r\n  //   setmessages([...messages,message])  \r\n  //   // console.log(messages)\r\n\r\n    \r\n  //   }\r\n  const handleNewMessage = () => {\r\n    fetch('http://localhost:3000/addmessage', {\r\n      method: 'POST', \r\n      body: new URLSearchParams({ message: message }),\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },  \r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.text();\r\n    })\r\n    .then(() => {\r\n      alert('new message added');\r\n      const updatedmessage = [...messages, { message: message }]; // Create a new messa object if necessary\r\n      setMessages(updatedmessage); // Update the messas state\r\n      setMessage(\"\"); // Clear the new messa input\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n  \r\n\r\n    return ( \r\n      \r\n      <div className='container'>\r\n\r\n        <div className='form'>\r\n      <h3> share your thoughts here </h3>\r\n\r\n      <input className=\"input\" type=\"text\" placeholder=\"content\" value={message} \r\n      onChange={e => setMessage(e.target.value)} />\r\n      \r\n      <button  onClick={handleNewMessage}>submit</button>\r\n      </div>\r\n    \r\n    <div className='messages'>\r\n     <ul>\r\n      {messages.map(message => (\r\n        <ul key={message.ID}>\r\n          {message.ID}  {message.message}\r\n        </ul>\r\n      ))}\r\n    </ul> \r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n    \r\n  \r\n\r\n );\r\n\r\n}\r\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}