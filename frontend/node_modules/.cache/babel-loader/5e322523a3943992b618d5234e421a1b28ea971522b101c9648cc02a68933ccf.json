{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login(onLoggedIn) {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const handleRegister=()=>{\n  //     fetch('http://localhost:3000/register', {\n  //       method: 'POST', \n  //       headers: {\n  //         'Content-Type': 'application/x-www-form-urlencoded'\n  //       },\n  //       body: new URLSearchParams ({username:username,password:password}),\n  //     })\n\n  //     .then(response => {\n  //       if (response.status === 400) {\n  //           alert(\"user aleady exists, please log in\")\n  //       }\n\n  //       if (response.status===200){\n  //         alert(\"new user register successfully\")\n  //         setUsername(\"\");\n  //         setPassword(\"\");\n\n  //         navigate(\"/messages\")\n  //       }\n  //   })\n  //       .catch(err => console.error(err));\n\n  //     }\n  const handleRegister = () => {\n    fetch('http://localhost:3000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        username: username,\n        password: password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'user_exists') {\n        alert('User already exists, please log in.');\n      } else if (data.status === 'success') {\n        alert('New user registered successfully');\n        // onLoggedIn(username)\n        navigate(\"/channels\");\n      }\n    })\n    //   .then(user => {\n    //     props.onLoggedIn(user.username);\n    // })\n    .catch(err => console.error(err));\n  };\n  const handleLogIn = () => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      body: new URLSearchParams({\n        username: username,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.status === \"user_not_found\") {\n        alert(\"user does not exist, please register first\");\n      } else if (data.status === 'incorrect_password') {\n        alert('Incorrect password. Please try again.');\n      } else if (data.status === 'success') {\n        alert('Log in successfully');\n        setUsername(\"\");\n        setPassword(\"\");\n        navigate(\"/channels\");\n        set;\n      }\n    }).then(user => {\n      props.onLoggedIn(user.username);\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Log in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleRegister,\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleLogIn,\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n}\n_s(Login, \"kvBslHZjv1wC4E+0uHqiNQ8Vrho=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onLoggedIn","_s","navigate","username","setUsername","password","setPassword","handleRegister","fetch","method","headers","body","URLSearchParams","then","response","json","data","status","alert","catch","err","console","error","handleLogIn","set","user","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Login.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login(onLoggedIn){\r\n  const navigate = useNavigate();\r\n    const[username,setUsername] = useState(\"\");\r\n    const[password,setPassword] = useState(\"\");\r\n\r\n\r\n    // const handleRegister=()=>{\r\n    //     fetch('http://localhost:3000/register', {\r\n    //       method: 'POST', \r\n    //       headers: {\r\n    //         'Content-Type': 'application/x-www-form-urlencoded'\r\n    //       },\r\n    //       body: new URLSearchParams ({username:username,password:password}),\r\n    //     })\r\n\r\n    //     .then(response => {\r\n    //       if (response.status === 400) {\r\n    //           alert(\"user aleady exists, please log in\")\r\n    //       }\r\n         \r\n    //       if (response.status===200){\r\n    //         alert(\"new user register successfully\")\r\n    //         setUsername(\"\");\r\n    //         setPassword(\"\");\r\n              \r\n    //         navigate(\"/messages\")\r\n    //       }\r\n    //   })\r\n    //       .catch(err => console.error(err));\r\n       \r\n    //     }\r\n    const handleRegister=()=>{\r\n      fetch('http://localhost:3000/register', {\r\n        method: 'POST', \r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams ({username:username,password:password}),\r\n      })\r\n\r\n      .then(response=>response.json())\r\n      .then(data => {\r\n        if (data.status === 'user_exists') {\r\n          alert('User already exists, please log in.');\r\n          \r\n        } else if (data.status === 'success') {\r\n          alert('New user registered successfully');\r\n          // onLoggedIn(username)\r\n          navigate(\"/channels\");\r\n\r\n        }\r\n      })\r\n    //   .then(user => {\r\n    //     props.onLoggedIn(user.username);\r\n    // })\r\n     \r\n      .catch(err => console.error(err))\r\n\r\n      \r\n     \r\n      }\r\n        const handleLogIn = () => {\r\n          fetch(\"http://localhost:3000/login\", {\r\n              method: \"POST\",\r\n              body: new URLSearchParams({ username: username, password: password }),\r\n              headers: { \"Content-type\": \"application/x-www-form-urlencoded\" }\r\n          }).then(response => response.json())\r\n          .then(data=>{\r\n            if (data.status === \"user_not_found\")\r\n            {alert(\r\n            \"user does not exist, please register first\"\r\n            )}\r\n            else if (data.status === 'incorrect_password') {\r\n              alert('Incorrect password. Please try again.');\r\n            } else if (data.status === 'success') {\r\n              alert('Log in successfully'); \r\n              setUsername(\"\");\r\n              setPassword(\"\");\r\n              navigate(\"/channels\");\r\n              set\r\n            }\r\n\r\n          })\r\n          .then(user => {\r\n            props.onLoggedIn( user.username);\r\n        })\r\n          .catch(err => console.error(err));\r\n                            \r\n              \r\n                 \r\n            \r\n                         \r\n             \r\n      }\r\n\r\n    return (<div className='app'>\r\n\r\n<>\r\n        <h3> Log in </h3>\r\n        <div>\r\n        \r\n        <input className=\"input\"type=\"text\" placeholder=\"username\" value={username} \r\n        onChange={e => setUsername(e.target.value)} /><br/>\r\n        <input className=\"input\" type=\"text\" placeholder=\"password\" value={password} \r\n        onChange={e => setPassword(e.target.value)} />\r\n        </div>\r\n        <button className=\"button\" onClick={handleRegister}>register</button>\r\n        <button className=\"button\" onClick={handleLogIn}>log in</button>      \r\n    </>\r\n\r\n    </div>\r\n    \r\n    \r\n    );\r\n}\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}