{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data.posts);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST',\n      body: new URLSearchParams({\n        newPost: newPost\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(alert(`new post added`)).catch(error => console.error(error));\n    setData(\"\");\n    setTopic(\"\");\n    setPosts([...posts, {\n      topic,\n      data\n    }]);\n    console.log(posts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" share your thoughts here \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"content\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewPost,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [post.ID, \"  \", post.data]\n        }, post.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n_s(Messages, \"mLF3sy7cPe8e17rtLBlx7M+fFKk=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Messages","_s","posts","setPosts","newPost","setNewPost","fetch","then","response","ok","Error","json","data","catch","error","console","handleNewPost","method","body","URLSearchParams","headers","alert","setData","setTopic","topic","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","post","ID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Messages.js"],"sourcesContent":["import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\n\r\nfunction Messages(){\r\n    const [posts, setPosts] = useState([]);\r\n  const [newPost, setNewPost] = useState('');\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/getposts')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setPosts(data.posts)\r\n      })\r\n      .catch(error => {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n        \r\n      });\r\n  }, []); \r\n\r\n  const handleNewPost = () => {\r\n    fetch('http://localhost:3000/addpost', {\r\n      method: 'POST', \r\n      body: new URLSearchParams ({newPost:newPost}),\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      \r\n    })\r\n    .then(response => response.json())\r\n    .then(alert(`new post added`))\r\n    .catch(error => console.error(error))\r\n    setData(\"\");\r\n    setTopic(\"\");  \r\n    setPosts([...posts,{topic,data}])  \r\n    console.log(posts)\r\n\r\n    \r\n    }\r\n\r\n    return ( \r\n      \r\n      <div className='container'>\r\n\r\n        <div className='form'>\r\n      <h3> share your thoughts here </h3>\r\n\r\n      <input className=\"input\" type=\"text\" placeholder=\"content\" value={data} \r\n      onChange={e => setData(e.target.value)} />\r\n      \r\n      <button  onClick={handleNewPost}>submit</button>\r\n      </div>\r\n    \r\n    <div className='messages'>\r\n     <ul>\r\n      {posts.map(post => (\r\n        <ul key={post.ID}>\r\n          {post.ID}  {post.data}\r\n        </ul>\r\n      ))}\r\n    </ul> \r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n    \r\n  \r\n\r\n );\r\n\r\n}\r\nexport default Messages;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZT,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACtB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IAEvE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BV,KAAK,CAAC,+BAA+B,EAAE;MACrCW,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAE;QAACf,OAAO,EAACA;MAAO,CAAC,CAAC;MAC7CgB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IAEF,CAAC,CAAC,CACDb,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACc,KAAK,CAAE,gBAAe,CAAC,CAAC,CAC7BR,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACrCQ,OAAO,CAAC,EAAE,CAAC;IACXC,QAAQ,CAAC,EAAE,CAAC;IACZpB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAC;MAACsB,KAAK;MAACZ;IAAI,CAAC,CAAC,CAAC;IACjCG,OAAO,CAACU,GAAG,CAACvB,KAAK,CAAC;EAGlB,CAAC;EAED,oBAEEH,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExB5B,OAAA;MAAK2B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACvB5B,OAAA;QAAA4B,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEnChC,OAAA;QAAO2B,SAAS,EAAC,OAAO;QAACM,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,SAAS;QAACC,KAAK,EAAEtB,IAAK;QACvEuB,QAAQ,EAAEC,CAAC,IAAId,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE1ChC,OAAA;QAASuC,OAAO,EAAEtB,aAAc;QAAAW,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAERhC,OAAA;MAAK2B,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxB5B,OAAA;QAAA4B,QAAA,EACEzB,KAAK,CAACqC,GAAG,CAACC,IAAI,iBACbzC,OAAA;UAAA4B,QAAA,GACGa,IAAI,CAACC,EAAE,EAAC,IAAE,EAACD,IAAI,CAAC5B,IAAI;QAAA,GADd4B,IAAI,CAACC,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIL,CAAC;AAMN;AAAC9B,EAAA,CAvEQD,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAwEjB,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}