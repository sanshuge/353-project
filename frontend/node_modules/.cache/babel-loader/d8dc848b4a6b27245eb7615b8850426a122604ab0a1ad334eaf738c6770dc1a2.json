{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353code\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data.posts);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"all my posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [post.ID, \" topic: \", post.topic, \" data:\", post.data]\n      }, post.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","posts","setPosts","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","ID","topic","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353code/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setPosts(data.posts)\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n        \n      });\n  }, []); \n  return (\n    <div className=\"App\">\n      <h3>all my posts:</h3>\n      <ul>\n        {posts.map(post => (\n          <ul key={post.ID}>\n            {post.ID} topic: {post.topic} data:{post.data}\n          </ul>\n        ))}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZP,QAAQ,CAACO,IAAI,CAACR,KAAK,CAAC;IACtB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IAEvE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,EACGb,KAAK,CAACkB,GAAG,CAACC,IAAI,iBACbtB,OAAA;QAAAgB,QAAA,GACGM,IAAI,CAACC,EAAE,EAAC,UAAQ,EAACD,IAAI,CAACE,KAAK,EAAC,QAAM,EAACF,IAAI,CAACX,IAAI;MAAA,GADtCW,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV;AAAClB,EAAA,CA/BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}