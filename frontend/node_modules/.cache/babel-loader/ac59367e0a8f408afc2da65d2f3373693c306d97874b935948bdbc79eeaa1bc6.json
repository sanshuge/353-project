{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data.posts);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST',\n      body: new URLSearchParams({\n        topic: topic,\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(alert(`new post added`)).catch(error => console.error(error));\n    setData(\"\");\n    setTopic(\"\");\n    setPosts([...posts, {\n      data\n    }]);\n    console.log(posts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" AddPosts \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"content\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewPost,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"all my posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [post.ID, \"  data:\", post.data]\n      }, post.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this);\n}\n_s(Messages, \"HFr9zgMDPn7/0QAIhGqgMYa/bB4=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Messages","_s","posts","setPosts","data","setData","fetch","then","response","ok","Error","json","catch","error","console","handleNewPost","method","body","URLSearchParams","topic","headers","alert","setTopic","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","post","ID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Messages.js"],"sourcesContent":["import React from 'react';\nimport {useState,useEffect} from 'react';\n\nfunction Messages(){\n    const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setPosts(data.posts)\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n        \n      });\n  }, []); \n\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST', \n      body: new URLSearchParams ({topic : topic,data:data}),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      \n    })\n    .then(response => response.json())\n    .then(alert(`new post added`))\n    .catch(error => console.error(error))\n    setData(\"\");\n    setTopic(\"\");  \n    setPosts([...posts,{data}])  \n    console.log(posts)\n\n    \n    }\n\n    return ( <div className=\"App\">\n    <h3> AddPosts </h3>\n      <div>\n      \n      {/* <input type=\"text\" placeholder=\"topic\" value={topic} \n      onChange={e => setTopic(e.target.value)} /><br/> */}\n      <input type=\"text\" placeholder=\"content\" value={data} \n      onChange={e => setData(e.target.value)} />\n      </div>\n      <button onClick={handleNewPost}>submit</button>\n         \n    <h3>all my posts:</h3> \n     <ul>\n      {posts.map(post => (\n        <ul key={post.ID}>\n          {post.ID}  data:{post.data}\n        </ul>\n      ))}\n    </ul> \n\n    \n  \n\n  </div>);\n\n}\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}