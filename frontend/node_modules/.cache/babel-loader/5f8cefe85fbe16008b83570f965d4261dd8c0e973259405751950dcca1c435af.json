{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353code\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Login from './Login';\nimport Landing from './Landing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [topic, setTopic] = useState('');\n  const [data, setData] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data.posts);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST',\n      body: new URLSearchParams({\n        topic: topic,\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(alert(`new post added`)).catch(error => console.error(error));\n    setData(\"\");\n    setTopic(\"\");\n    setPosts([...posts, {\n      topic,\n      data\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zlWGKBukQq6HlERmYA7ljRi11aQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Landing","jsxDEV","_jsxDEV","App","_s","posts","setPosts","topic","setTopic","data","setData","fetch","then","response","ok","Error","json","catch","error","console","handleNewPost","method","body","URLSearchParams","headers","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353code/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Login from './Login';\nimport Landing from './Landing'\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [topic, setTopic] = useState('');\n  const [data, setData] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/getposts')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setPosts(data.posts)\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n        \n      });\n  }, []); \n\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST', \n      body: new URLSearchParams ({topic : topic,data:data}),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      \n    })\n    .then(response => response.json())\n    .then(alert(`new post added`))\n    .catch(error => console.error(error))\n    setData(\"\");\n    setTopic(\"\");  \n    setPosts([...posts,{topic,data}])  \n\n    \n    }\n   \n  return (\n    <div className=\"App\">\n      <Landing/>\n     <Login/>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACH,IAAI,IAAI;MACZH,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAAC;IACtB,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IAEvE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BT,KAAK,CAAC,+BAA+B,EAAE;MACrCU,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAE;QAAChB,KAAK,EAAGA,KAAK;QAACE,IAAI,EAACA;MAAI,CAAC,CAAC;MACrDe,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IAEF,CAAC,CAAC,CACDZ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACa,KAAK,CAAE,gBAAe,CAAC,CAAC,CAC7BR,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACrCR,OAAO,CAAC,EAAE,CAAC;IACXF,QAAQ,CAAC,EAAE,CAAC;IACZF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAC;MAACE,KAAK;MAACE;IAAI,CAAC,CAAC,CAAC;EAGjC,CAAC;EAEH,oBACEP,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA,CAACF,OAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACX7B,OAAA,CAACH,KAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGJ,CAAC;AAEV;AAAC3B,EAAA,CAhDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}