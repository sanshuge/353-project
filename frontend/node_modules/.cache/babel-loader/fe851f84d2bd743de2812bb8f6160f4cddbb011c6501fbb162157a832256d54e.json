{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353code\\\\frontend\\\\src\\\\Channels.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Channels = () => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [newChannel, setNewChannel] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:3000/getChannels').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setChannels(data);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  const createChannel = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [channels.map(channel => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [channel.ID, \"  channel:\", channel.channel, /*#__PURE__*/_jsxDEV(Link, {\n          to: `/channel/${channel.ID}`,\n          children: \"Go to Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, channel.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name your channel\",\n        value: newChannel,\n        onChange: e => setNewChannel(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createChannel,\n        children: \"Create Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n};\n_s(Channels, \"QH3MipAnDp6TQkv5uGF0cEYZQpA=\");\n_c = Channels;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Channels","_s","channels","setChannels","newChannel","setNewChannel","fetch","then","response","ok","Error","json","data","catch","error","console","createChannel","className","children","map","channel","ID","Link","to","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353code/frontend/src/Channels.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nexport const Channels = () => {\r\n    const [channels,setChannels] = useState([]);\r\n    const [newChannel,setNewChannel] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/getChannels')\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            setChannels(data)\r\n          })\r\n          .catch(error => {\r\n            console.error('There was a problem with the fetch operation:', error);\r\n            \r\n          });\r\n      }, []); \r\n\r\n\r\n      const createChannel =()=>{\r\n\r\n      }\r\n\r\n\r\nreturn (\r\n    \r\n<div className=\"App\">\r\n\r\n<div>\r\n{channels.map(channel => (\r\n        <ul key={channel.ID}>\r\n          {channel.ID}  channel:{channel.channel}\r\n          <Link to={`/channel/${channel.ID}`}>Go to Messages</Link>\r\n        </ul>\r\n      ))}\r\n   <input type=\"text\" placeholder=\"name your channel\" value={newChannel} \r\n   onChange={(e) => setNewChannel(e.target.value)} />\r\n <button onClick={createChannel}>Create Channel</button>\r\n                </div>\r\n\r\n\r\n</div>)\r\n\r\n\r\n}\r\nexport default Channels;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZT,WAAW,CAACS,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IAEvE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,MAAME,aAAa,GAAEA,CAAA,KAAI,CAEzB,CAAC;EAGP,oBAEAjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAEpBnB,OAAA;MAAAmB,QAAA,GACChB,QAAQ,CAACiB,GAAG,CAACC,OAAO,iBACbrB,OAAA;QAAAmB,QAAA,GACGE,OAAO,CAACC,EAAE,EAAC,YAAU,EAACD,OAAO,CAACA,OAAO,eACtCrB,OAAA,CAACuB,IAAI;UAACC,EAAE,EAAG,YAAWH,OAAO,CAACC,EAAG,EAAE;UAAAH,QAAA,EAAC;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFlDP,OAAO,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL,CAAC,eACL5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,mBAAmB;QAACC,KAAK,EAAE1B,UAAW;QACrE2B,QAAQ,EAAGC,CAAC,IAAK3B,aAAa,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpD5B,OAAA;QAAQmC,OAAO,EAAElB,aAAc;QAAAE,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGjB,CAAC;AAGN,CAAC;AAAA1B,EAAA,CA/CYD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAgDrB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}