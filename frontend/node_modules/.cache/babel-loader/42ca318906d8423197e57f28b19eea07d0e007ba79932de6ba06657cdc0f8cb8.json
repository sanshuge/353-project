{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport \"./Style.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  useEffect(() => {\n    refresh();\n  }, []);\n  const refresh = () => {\n    fetch('http://localhost:3000/getposts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data.posts);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST',\n      body: new URLSearchParams({\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(alert(`new post added`)).then(refresh()).catch(error => console.error(error));\n    setPosts([...posts, {\n      data\n    }]);\n    setData(\"\");\n\n    // console.log(posts)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"you can post here\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"content\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleNewPost,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [post.ID, \"  data:\", post.post]\n        }, post.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 14\n  }, this);\n}\n_s(Messages, \"HFr9zgMDPn7/0QAIhGqgMYa/bB4=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","Messages","_s","posts","setPosts","data","setData","refresh","fetch","then","response","ok","Error","json","catch","error","console","handleNewPost","method","body","URLSearchParams","headers","alert","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","post","ID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Messages.js"],"sourcesContent":["import React from 'react';\nimport {useState,useEffect} from 'react';\nimport \"./Style.css\"\nfunction Messages(){\n    const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n\n  useEffect(() => {\n    refresh();\n}, []);\n\nconst refresh  = () =>  {\n    fetch('http://localhost:3000/getposts')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n\n\n      .then(data => {\n        setPosts(data.posts)\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n        \n      });\n  }; \n\n  const handleNewPost = () => {\n    fetch('http://localhost:3000/addpost', {\n      method: 'POST', \n      body: new URLSearchParams ({data:data}),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      \n    })\n    .then(response => {\n      if (!response.ok) {\n          throw new Error('Network response was not ok');\n      }\n      return response.json();\n  })\n    .then(alert(`new post added`))\n    .then(refresh())\n    .catch(error => console.error(error)) \n    setPosts([...posts,{data}])  \n    setData(\"\");\n   \n    // console.log(posts)\n\n    \n    }\n\n    return ( <div className=\"container\">\n      <div className='form'>\n      <>you can post here</>\n   \n      <input type=\"text\" placeholder=\"content\" value={data} \n      onChange={e => setData(e.target.value)} />   \n      <button className= \"button\"onClick={handleNewPost}>submit</button>\n      </div>\n   \n         <div className=''>\n     <ul>\n      {posts.map(post => (\n        <ul key={post.ID}>\n          {post.ID}  data:{post.post}\n        </ul>\n\n      ))}\n    </ul> \n    </div>\n\n    \n  \n\n  </div>);\n\n}\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}