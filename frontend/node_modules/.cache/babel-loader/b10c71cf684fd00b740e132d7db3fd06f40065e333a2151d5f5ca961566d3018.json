{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Channel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Message from './Message';\nimport axios from 'axios';\n/**\r\n * this component is for showing all the messages in this channel and allow user to create channel\r\n */\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Channel(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  const [image, setImage] = useState();\n  const [imagePreview, setImagePreview] = useState(null);\n  useEffect(() => {\n    refresh();\n  }, []);\n  const refresh = async () => {\n    const res = await axios.get(\"http://localhost:3000/getposts\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (res.data.status == 201) {\n      console.log(res);\n      setPosts(res.data.data);\n    } else {\n      console.log('error');\n    }\n  };\n  const handleNewPost = async e => {\n    e.preventDefault();\n    const formdata = new FormData();\n    formdata.append(\"image\", image);\n    formdata.append(\"data\", data);\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const res = await axios.post('http://localhost:3000/addpost', formdata, config);\n    console.log(res);\n    alert(\"new post is added\");\n    setData('');\n    setImage('');\n    setImagePreview('');\n    refresh();\n  };\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"you can post here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"content\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleNewPost,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [props.username, \" : \", post.post, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:3000/images/${post.image}`,\n            style: {\n              maxWidth: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 12\n          }, this)]\n        }, post.postID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 14\n  }, this);\n}\n_s(Channel, \"YUoMesk/zlOBUXJEzCO+tnFdjzA=\");\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["React","useState","useEffect","Message","axios","jsxDEV","_jsxDEV","Channel","props","_s","posts","setPosts","data","setData","image","setImage","imagePreview","setImagePreview","refresh","res","get","headers","status","console","log","handleNewPost","e","preventDefault","formdata","FormData","append","config","post","alert","handleImageChange","event","target","files","file","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","src","alt","style","maxWidth","onClick","map","username","postID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Channel.js"],"sourcesContent":["import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport Message from './Message';\r\nimport axios from 'axios'\r\n/**\r\n * this component is for showing all the messages in this channel and allow user to create channel\r\n */\r\nimport \"./Style.css\"\r\nfunction Channel(props){\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [data, setData] = useState('');\r\n  const [image, setImage] = useState();\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n\r\n  useEffect (()=>{\r\n    refresh();\r\n  },[])\r\nconst refresh=async()=>{\r\n  const res = await axios.get(\"http://localhost:3000/getposts\",\r\n  {\r\n    headers:{\r\n      \"Content-Type\":\"application/json\"\r\n    }\r\n  }\r\n  );\r\n  if (res.data.status==201) {\r\n    console.log(res)\r\n\r\n    setPosts(res.data.data)\r\n  }\r\n  else {console.log('error')}\r\n}\r\n\r\n\r\n  const handleNewPost=async(e)=>{\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    formdata.append(\"image\",image);\r\n    formdata.append(\"data\",data);\r\n\r\n    const config = {headers:{\r\n      \"Content-Type\":\"multipart/form-data\"\r\n    }}\r\n    const res = await axios.post('http://localhost:3000/addpost',formdata,config);\r\n    console.log(res);\r\n    alert(\"new post is added\")\r\n    setData('');\r\n    setImage('');\r\n    setImagePreview('');\r\n    refresh();\r\n  }\r\n  \r\n\r\n\r\n  const handleImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      setImage(file);\r\n      setImagePreview(URL.createObjectURL(file));\r\n    }}\r\n\r\n\r\n  \r\n   \r\n    return ( <div className=\"container\">\r\n      <div className='form'>\r\n      <p>you can post here</p>\r\n      <br></br>\r\n   \r\n      <input className = \"input\"type=\"text\" placeholder=\"content\" value={data} \r\n      onChange={e => setData(e.target.value)} />  \r\n\r\n      <input type=\"file\" onChange={handleImageChange} />\r\n      {imagePreview && <img src={imagePreview} alt=\"Preview\" style={{ maxWidth: '200px' }} />}\r\n\r\n\r\n      <button className= \"button\"onClick={handleNewPost}>submit</button>\r\n\r\n\r\n      </div>\r\n   \r\n         <div className='container'>\r\n\r\n     <ul>\r\n      {posts.map(post => (\r\n        <li key={post.postID}>\r\n           {props.username} : {post.post} \r\n           <br></br>\r\n\r\n         <img src={`http://localhost:3000/images/${post.image}` } style={{ maxWidth: '200px' }} ></img>\r\n           <Message/>\r\n        </li>\r\n        \r\n      \r\n      ))}\r\n\r\n      \r\n    </ul> \r\n    </div>\r\n\r\n    \r\n  \r\n\r\n  </div>);\r\n\r\n}\r\nexport default Channel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}