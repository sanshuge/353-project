{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const handleRegister=()=>{\n  //     fetch('http://localhost:3000/register', {\n  //       method: 'POST', \n  //       headers: {\n  //         'Content-Type': 'application/x-www-form-urlencoded'\n  //       },\n  //       body: new URLSearchParams ({username:username,password:password}),\n  //     })\n\n  //     .then(response => {\n  //       if (response.status === 400) {\n  //           alert(\"user aleady exists, please log in\")\n  //       }\n\n  //       if (response.status===200){\n  //         alert(\"new user register successfully\")\n  //         setUsername(\"\");\n  //         setPassword(\"\");\n\n  //         navigate(\"/messages\")\n  //       }\n  //   })\n  //       .catch(err => console.error(err));\n\n  //     }\n  const handleRegister = () => {\n    fetch('http://localhost:3000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        username: username,\n        password: password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'user_exists') {\n        alert('User already exists, please log in.');\n      } else if (data.status === 'success') {\n        alert('New user registered successfully');\n      }\n    }).catch(err => console.error(err));\n    navigate(\"/channels\");\n  };\n  const handleLogIn = () => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      body: new URLSearchParams({\n        username: username,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.status === \"user_not_found\") {\n        alert(\"user does not exist, please register first\");\n      } else if (data.status === 'incorrect_password') {\n        alert('Incorrect password. Please try again.');\n      } else if (data.status === 'success') {\n        alert('Log in successfully');\n        setUsername(\"\");\n        setPassword(\"\");\n        navigate(\"/channels\");\n      }\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Log in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleRegister,\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleLogIn,\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }, this);\n}\n_s(Login, \"kvBslHZjv1wC4E+0uHqiNQ8Vrho=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","username","setUsername","password","setPassword","handleRegister","fetch","method","headers","body","URLSearchParams","then","response","json","data","status","alert","catch","err","console","error","handleLogIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Login.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login(){\r\n  const navigate = useNavigate();\r\n    const[username,setUsername] = useState(\"\");\r\n    const[password,setPassword] = useState(\"\");\r\n\r\n\r\n    // const handleRegister=()=>{\r\n    //     fetch('http://localhost:3000/register', {\r\n    //       method: 'POST', \r\n    //       headers: {\r\n    //         'Content-Type': 'application/x-www-form-urlencoded'\r\n    //       },\r\n    //       body: new URLSearchParams ({username:username,password:password}),\r\n    //     })\r\n\r\n    //     .then(response => {\r\n    //       if (response.status === 400) {\r\n    //           alert(\"user aleady exists, please log in\")\r\n    //       }\r\n         \r\n    //       if (response.status===200){\r\n    //         alert(\"new user register successfully\")\r\n    //         setUsername(\"\");\r\n    //         setPassword(\"\");\r\n              \r\n    //         navigate(\"/messages\")\r\n    //       }\r\n    //   })\r\n    //       .catch(err => console.error(err));\r\n       \r\n    //     }\r\n    const handleRegister=()=>{\r\n      fetch('http://localhost:3000/register', {\r\n        method: 'POST', \r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams ({username:username,password:password}),\r\n      })\r\n\r\n      .then(response=>response.json())\r\n      .then(data => {\r\n        if (data.status === 'user_exists') {\r\n          alert('User already exists, please log in.');\r\n          \r\n        } else if (data.status === 'success') {\r\n          alert('New user registered successfully');\r\n        }\r\n      })\r\n      .catch(err => console.error(err))\r\n      navigate(\"/channels\");\r\n\r\n      \r\n     \r\n      }\r\n        const handleLogIn = () => {\r\n          fetch(\"http://localhost:3000/login\", {\r\n              method: \"POST\",\r\n              body: new URLSearchParams({ username: username, password: password }),\r\n              headers: { \"Content-type\": \"application/x-www-form-urlencoded\" }\r\n          }).then(response => response.json())\r\n          .then(data=>{\r\n            if (data.status === \"user_not_found\")\r\n            {alert(\r\n            \"user does not exist, please register first\"\r\n            )}\r\n            else if (data.status === 'incorrect_password') {\r\n              alert('Incorrect password. Please try again.');\r\n            } else if (data.status === 'success') {\r\n              alert('Log in successfully'); \r\n              setUsername(\"\");\r\n              setPassword(\"\");\r\n              navigate(\"/channels\");\r\n            }\r\n\r\n          }).catch(err => console.error(err));\r\n                            \r\n              \r\n                 \r\n            \r\n                         \r\n             \r\n      }\r\n\r\n    return (<div className='app'>\r\n\r\n<>\r\n        <h3> Log in </h3>\r\n        <div>\r\n        \r\n        <input className=\"input\"type=\"text\" placeholder=\"username\" value={username} \r\n        onChange={e => setUsername(e.target.value)} /><br/>\r\n        <input className=\"input\" type=\"text\" placeholder=\"password\" value={password} \r\n        onChange={e => setPassword(e.target.value)} />\r\n        </div>\r\n        <button className=\"button\" onClick={handleRegister}>register</button>\r\n        <button className=\"button\" onClick={handleLogIn}>log in</button>      \r\n    </>\r\n\r\n    </div>\r\n    \r\n    \r\n    );\r\n}\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}