{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Channels.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link\nimport \"./Channels.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Channels = () => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [channel, setChannel] = useState(\"\");\n  // handle receive.\n\n  useEffect(() => {\n    fetch('http://localhost:3000/getChannels').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setChannels(data.channels);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  const createChannel = () => {\n    // console.log(\"New channel before fetch:\", newChannel); \n    fetch('http://localhost:3000/addChannel', {\n      method: 'POST',\n      body: new URLSearchParams({\n        channel: channel\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(() => {\n      alert('new channel added');\n      const updatedchannels = [...channels, {\n        channel: channel\n      }]; // Create a new messa object if necessary\n      setChannels(updatedchannels); // Update the messas state\n      setChannel(\"\"); // Clear the new messa input\n    }).catch(error => console.error(error));\n  };\n  // .then(response => response.json())\n\n  // .then(alert(`new channel added`))\n  // .catch(error => console.error(error)) \n  //  setNewChannel(\"\");\n  // setChannels([...channels,newChannel])  \n  // console.log(\" all the channels:\", channels); \n\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Join the channels or create your own channel!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"name your channel\",\n        value: channel,\n        onChange: e => setChannel(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: createChannel,\n        children: \"Create Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels\",\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/channels/${channel.ID}/${channel.channel}`,\n          children: \"   \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), channel.channelname]\n      }, channel.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 1\n  }, this);\n};\n_s(Channels, \"51/gAV/5caD2VuB8XJMnX0rm4kc=\");\n_c = Channels;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Channels","_s","channels","setChannels","channel","setChannel","fetch","then","response","ok","Error","json","data","catch","error","console","createChannel","method","body","URLSearchParams","headers","text","alert","updatedchannels","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","to","ID","channelname","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Channels.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link\r\nimport\"./Channels.css\"\r\nexport const Channels = () => {\r\n    const [channels,setChannels] = useState([]);\r\n    const [channel,setChannel] = useState(\"\");\r\n    // handle receive.\r\n  \r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/getChannels')\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n          })\r\n          \r\n          .then(data => {\r\n            setChannels(data.channels)\r\n          })    \r\n          .catch(error => {\r\n            console.error('There was a problem with the fetch operation:', error);\r\n            \r\n          });\r\n      }, []); \r\n\r\n\r\n      const createChannel = () => {\r\n        // console.log(\"New channel before fetch:\", newChannel); \r\n        fetch('http://localhost:3000/addChannel', {\r\n          method: 'POST', \r\n          body: new URLSearchParams ({channel : channel\r\n        }),\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          },\r\n          \r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.text();\r\n        })\r\n        .then(() => {\r\n          alert('new channel added');\r\n          const updatedchannels = [...channels, { channel: channel }]; // Create a new messa object if necessary\r\n          setChannels(updatedchannels); // Update the messas state\r\n          setChannel(\"\"); // Clear the new messa input\r\n        })\r\n        .catch(error => console.error(error));\r\n      }\r\n        // .then(response => response.json())\r\n       \r\n        // .then(alert(`new channel added`))\r\n        // .catch(error => console.error(error)) \r\n        //  setNewChannel(\"\");\r\n        // setChannels([...channels,newChannel])  \r\n        // console.log(\" all the channels:\", channels); \r\n        \r\n        // }\r\nreturn (\r\n    \r\n<div className=\"container\"> \r\n<div className='form' >\r\n<p>Join the channels or create your own channel!</p>\r\n\r\n   <input className=\"input\"type=\"text\" placeholder=\"name your channel\" value={channel} \r\n   onChange={(e) => setChannel(e.target.value)} />\r\n <button  className=\"button\"onClick={createChannel}>Create Channel</button>\r\n </div>   \r\n          \r\n<div className='channels'>\r\n \r\n\r\n{channels.map(channel => (\r\n        <ul key={channel.ID}>  \r\n          <Link to={`/channels/${channel.ID}/${channel.channel}`}>   </Link>\r\n          {channel.channelname}\r\n        </ul>\r\n      ))}\r\n       {/* {channels ? (\r\n        channels.map((channel) => (\r\n          <div key={channel.id}>\r\n            <h2>Item: {channel.channelname}</h2>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )} */}\r\n\r\n</div>\r\n\r\n      \r\n\r\n\r\n</div>\r\n)\r\n\r\n\r\n}\r\nexport default Channels;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}