{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaiy\\\\Desktop\\\\353-project\\\\frontend\\\\src\\\\Channel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Message from './Message';\nimport axios from 'axios';\n/**\n * this component is for showing all the messages in this channel and allow user to create channel\n */\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Channel() {\n  _s();\n  // const { channelID, channel } = useParams();\n\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  // const [replies,setReplies] = useState([]);\n  const [image, setImage] = useState();\n  const [imagePreview, setImagePreview] = useState(null);\n  useEffect(() => {\n    refresh();\n  }, []);\n  const refresh = async () => {\n    const res = await axios.get(\"http://localhost:3000/getposts\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (res.data.status == 201) {\n      console.log(res);\n      setPosts(res.data.data);\n    } else {\n      console.log('error');\n    }\n  };\n\n  // const refresh  = () =>  {\n  //     fetch('http://localhost:3000/getposts')\n  //       .then(response => {\n  //         if (!response.ok) {\n  //           throw new Error('Network response was not ok');\n  //         }\n  //         return response.json();\n  //       })\n  //       .then(data => {\n  //         setPosts(data.posts)\n  //       })\n  //       .catch(error => {\n  //         console.error('There was a problem with the fetch operation:', error);\n\n  //       });\n  //   }; \n  const handleNewPost = async e => {\n    e.preventDefault();\n    const formdata = new FormData();\n    formdata.append(\"image\", image);\n    formdata.append(\"data\", data);\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const res = await axios.post('http://localhost:3000/addpost', formdata, config);\n    console.log(res);\n    alert(\"new post is added\");\n    setData('');\n    setImage('');\n    setImagePreview('');\n    refresh();\n  };\n  // const handleNewImage =()=>{\n  //   const formdata  = new FormData();\n  //   formdata.append('image',image);\n  //   axios.post(\"http://localhost:3000/upload\",formdata)\n  //   .then(res=>{\n  //     if (res.data.Status === \"success\"){console.log(\"good job\")}\n  //     else{console.log(\"failed\")}\n  //   })\n  //   .catch(err=>console.log(err))\n\n  // }\n  // const getImage =()=>{\n  //   axios.get(\"http://localhost:3000/getposts\")\n  //   .then(res=>{setImage(res.image[0])})\n  //   .catch(err=>console.log(err))}\n\n  // const handleNewPost = () => {\n\n  //   fetch('http://localhost:3000/addpost', {\n  //     method: 'POST', \n  //     body: new URLSearchParams ({data:data}),\n  //     headers: {\n  //       'Content-Type': 'application/x-www-form-urlencoded'\n  //     },     \n  //   })\n  //   .then(response => {\n  //     if (!response.ok) {\n  //         throw new Error('Network response was not ok');\n  //     }\n  //     return response.json();\n  // })\n  //   .then(alert(`new post added`))\n  //   .then(refresh())\n  //   .catch(error => console.error(error)) \n  //   setPosts([...posts,{data,image}])  \n  //   setData(\"\");\n  //   // setImage(null)\n  //   setImagePreview(null)\n\n  // }\n\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"you can post here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"content\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleNewPost,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [post.post, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `..\\images\\image_1701671253052.jpg`,\n            style: {\n              maxWidth: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 12\n          }, this)]\n        }, post.postID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 14\n  }, this);\n}\n_s(Channel, \"YUoMesk/zlOBUXJEzCO+tnFdjzA=\");\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["React","useState","useEffect","Message","axios","jsxDEV","_jsxDEV","Channel","_s","posts","setPosts","data","setData","image","setImage","imagePreview","setImagePreview","refresh","res","get","headers","status","console","log","handleNewPost","e","preventDefault","formdata","FormData","append","config","post","alert","handleImageChange","event","target","files","file","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","src","alt","style","maxWidth","onClick","map","postID","_c","$RefreshReg$"],"sources":["C:/Users/chaiy/Desktop/353-project/frontend/src/Channel.js"],"sourcesContent":["import React from 'react';\nimport {useState,useEffect} from 'react';\nimport Message from './Message';\nimport axios from 'axios'\n/**\n * this component is for showing all the messages in this channel and allow user to create channel\n */\nimport \"./Style.css\"\nfunction Channel(){\n  // const { channelID, channel } = useParams();\n\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState('');\n  // const [replies,setReplies] = useState([]);\n  const [image, setImage] = useState();\n  const [imagePreview, setImagePreview] = useState(null);\n\n  useEffect (()=>{\n    refresh();\n  },[])\nconst refresh=async()=>{\n  const res = await axios.get(\"http://localhost:3000/getposts\",\n  {\n    headers:{\n      \"Content-Type\":\"application/json\"\n    }\n  }\n  );\n  if (res.data.status==201) {\n    console.log(res)\n\n    setPosts(res.data.data)\n  }\n  else {console.log('error')}\n}\n\n\n// const refresh  = () =>  {\n//     fetch('http://localhost:3000/getposts')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setPosts(data.posts)\n//       })\n//       .catch(error => {\n//         console.error('There was a problem with the fetch operation:', error);\n        \n//       });\n//   }; \n  const handleNewPost=async(e)=>{\n    e.preventDefault();\n    const formdata = new FormData();\n    formdata.append(\"image\",image);\n    formdata.append(\"data\",data);\n\n    const config = {headers:{\n      \"Content-Type\":\"multipart/form-data\"\n    }}\n    const res = await axios.post('http://localhost:3000/addpost',formdata,config);\n    console.log(res);\n    alert(\"new post is added\")\n    setData('');\n    setImage('');\n    setImagePreview('');\n    refresh();\n  }\n  // const handleNewImage =()=>{\n  //   const formdata  = new FormData();\n  //   formdata.append('image',image);\n  //   axios.post(\"http://localhost:3000/upload\",formdata)\n  //   .then(res=>{\n  //     if (res.data.Status === \"success\"){console.log(\"good job\")}\n  //     else{console.log(\"failed\")}\n  //   })\n  //   .catch(err=>console.log(err))\n\n  // }\n// const getImage =()=>{\n//   axios.get(\"http://localhost:3000/getposts\")\n//   .then(res=>{setImage(res.image[0])})\n//   .catch(err=>console.log(err))}\n\n\n  // const handleNewPost = () => {\n\n  //   fetch('http://localhost:3000/addpost', {\n  //     method: 'POST', \n  //     body: new URLSearchParams ({data:data}),\n  //     headers: {\n  //       'Content-Type': 'application/x-www-form-urlencoded'\n  //     },     \n  //   })\n  //   .then(response => {\n  //     if (!response.ok) {\n  //         throw new Error('Network response was not ok');\n  //     }\n  //     return response.json();\n  // })\n  //   .then(alert(`new post added`))\n  //   .then(refresh())\n  //   .catch(error => console.error(error)) \n  //   setPosts([...posts,{data,image}])  \n  //   setData(\"\");\n  //   // setImage(null)\n  //   setImagePreview(null)\n    \n  // }\n\n\n  const handleImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }}\n\n\n  \n   \n    return ( <div className=\"container\">\n      <div className='form'>\n      <p>you can post here</p>\n      <br></br>\n   \n      <input className = \"input\"type=\"text\" placeholder=\"content\" value={data} \n      onChange={e => setData(e.target.value)} />  \n\n      <input type=\"file\" onChange={handleImageChange} />\n      {/* <button onClick={handleImageUpload}>upload</button> */}\n      {imagePreview && <img src={imagePreview} alt=\"Preview\" style={{ maxWidth: '200px' }} />}\n\n\n      <button className= \"button\"onClick={handleNewPost}>submit</button>\n\n\n      </div>\n   \n         <div className='container'>\n\n\n\n\n     <ul>\n      {posts.map(post => (\n        <li key={post.postID}>\n           {post.post} \n           <br></br>\n         {<img src={`..\\images\\image_1701671253052.jpg` }  style={{ maxWidth: '200px' }} />}\n\n         {/* <img src={`http://localhost:3000/getposts/${post.image}` } ></img> */}\n           <Message/>\n        </li>\n        \n      \n      ))}\n\n      \n    </ul> \n    </div>\n\n    \n  \n\n  </div>);\n\n}\nexport default Channel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}